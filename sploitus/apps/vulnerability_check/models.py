from django.db import models
from apps.auths.models import CustomUser
from apps.auths_bots import models as authbotmodels


class VulnTool(models.Model):
    name = models.CharField(max_length=150) 

    def __str__(self):
        return self.name
    

class VulnData(models.Model):
    request = models.CharField(max_length=200, null=True) 
    vuln_title = models.CharField(max_length=200, null=True)  
    vuln_date = models.CharField(max_length=100, null=True)  
    vuln_sample = models.CharField(max_length=150,null=True)  
    sploitus_id = models.CharField(max_length=200,null=True)  
    vulnerability_indicator = models.FloatField(null=True) 
    description = models.TextField(null=True, blank=True)  

    task_interval = models.IntegerField(default=5, null=True)

    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, verbose_name='пользователь', null=True)
    vuln_tool = models.ForeignKey(VulnTool, on_delete=models.CASCADE, null=True)

    def __str__(self):
        return self.vuln_title if self.vuln_title else 'No title'


class UserVuln(models.Model):
    request = models.CharField(max_length=200, null=True)

    task_interval = models.IntegerField(default=5, null=True)

    interval_category = models.CharField("Вид интервала", max_length=255)

    user = models.ForeignKey(CustomUser, on_delete=models.CASCADE, verbose_name='пользователь', null=True)


class BotRequest(models.Model):
    request = models.CharField(max_length=200, null=True)

    bot = models.ForeignKey(authbotmodels.TelegramBot, on_delete=models.SET_NULL, null=True)

    class Meta:
        verbose_name = "Запрос бота"
        verbose_name_plural = "Запросы ботов"


class VulnDataBot(models.Model):
    bot_request = models.ForeignKey(BotRequest, on_delete=models.SET_NULL, null=True)
    request = models.CharField(max_length=200, null=True)
    vuln_title = models.CharField(max_length=200, null=True)  
    vuln_date = models.CharField(max_length=100, null=True)  
    vuln_sample = models.CharField(max_length=150,null=True)  
    sploitus_id = models.CharField(max_length=200,null=True)  
    vulnerability_indicator = models.FloatField(null=True) 
    description = models.TextField(null=True, blank=True)  

    vuln_tool = models.ForeignKey(VulnTool, on_delete=models.CASCADE, null=True)
