from rest_framework import serializers
import re
from . import models


class VulnDataSerializer(serializers.ModelSerializer):

    class Meta:
        model = models.VulnData
        fields = ('request', 'task_interval',)  # если поле называется 'request'

    def validate_request(self, value):
        """
        Валидация значения поля request на домен или IP-адрес.
        """
        # Регулярные выражения для проверки домена и IP
        domain_regex = r"^(?!-)[A-Za-z0-9-]{1,63}(?<!-).(?:[A-Za-z]{2,})$"
        ipv4_regex = r"^(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[0-1]?[0-9][0-9]?)$"
        ipv6_regex = r"^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]|)[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]|)[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]|)[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]|)[0-9]))$"

        # Проверка на домен
        if re.match(domain_regex, value):
            return value

        # Проверка на IPv4
        if re.match(ipv4_regex, value):
            return value

        # Проверка на IPv6
        if re.match(ipv6_regex, value):
            return value

        raise serializers.ValidationError("Значение должно быть корректным доменом или IP-адресом.")


class VulnToolSerializer(serializers.ModelSerializer):
    class Meta:
        model = models.VulnTool
        fields = ('name',)


class VulnDataResultSerializer(serializers.ModelSerializer):
    class Meta:
        model = models.VulnData
        fields = '__all__'


class VulnDataRequestSerializer(serializers.ModelSerializer):
    class Meta:
        model = models.UserVuln
        fields = '__all__'


class BotRequestSerializer(serializers.ModelSerializer):
    class Meta:
        model = models.BotRequest
        fields = '__all__'


class VulnDataBotSerializer(serializers.ModelSerializer):
    class Meta:
        model = models.VulnDataBot
        fields = '__all__'
