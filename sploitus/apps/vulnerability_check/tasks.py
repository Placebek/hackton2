import json
from celery import shared_task
from .models import UserVuln, VulnData, VulnTool
from . import sploitus_parser


@shared_task
def parse_query_task(user_vuln_id):
    try:
        # Получаем запись UserVuln
        user_vuln = UserVuln.objects.get(id=user_vuln_id)

        # Инициализируем парсер и выполняем парсинг
        parser = sploitus_parser()
        results = parser.main(user_vuln.request)  # Возвращает список объектов

        # Сохраняем результаты в VulnData
        for result in results:
            VulnData.objects.create(
                request=user_vuln.request,
                vuln_title=result.get("vuln_title"),
                vuln_date=result.get("vuln_date", datetime.now().strftime("%Y-%m-%d")),
                vuln_sample=result.get("vuln_sample"),
                sploitus_id=result.get("sploitus_id"),
                vulnerability_indicator=result.get("vulnerability_indicator"),
                description=result.get("description"),
                task_interval=user_vuln.task_interval,
                user=user_vuln.user,
                vuln_tool=None,  # Свяжите с инструментом, если применимо
            )
        print(f"Парсинг завершен для запроса: {user_vuln.request}")
    except Exception as e:
        print(f"Ошибка при парсинге: {e}")
