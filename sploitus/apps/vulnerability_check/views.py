from django.shortcuts import render
from rest_framework import generics
from .models import *
from .serializers import *
from rest_framework.response import Response
from rest_framework import status
from .serializers import VulnDataSerializer


class CheckCreateApiView(generics.CreateAPIView):
    serializer_class = VulnDataSerializer
    def create_check(self, request):
        serializer = self.serializer_class(data=request.data)

        if serializer.is_valid:
            serializer.save()

            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
    

# class ChechListView(generics.ListAPIView):
#     serializer_class = VulnDataSerializer
#     def get(self, request):
#         vuln_data = VulnData.objects.all().order_by('-vulnerability_name')[:10]
#         serialiser = VulnDataSerializer(vuln_data, many=True)
#         return Response(serialiser.data, status=status.HTTP_200_OK)